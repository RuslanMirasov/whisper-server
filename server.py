from fastapi import FastAPI, WebSocket
import asyncio
import subprocess
import numpy as np
from faster_whisper import WhisperModel
import struct

app = FastAPI()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å (–º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å "base" –Ω–∞ "small", "medium", "large")
model = WhisperModel("base", compute_type="int8")

# –ó–∞–ø—É—Å–∫–∞–µ–º ffmpeg –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ –ø–æ—Ç–æ–∫–∞
def start_ffmpeg():
    return subprocess.Popen(
        [
            "ffmpeg",
            "-loglevel", "quiet",
            "-f", "webm",
            "-i", "pipe:0",
            "-ac", "1",
            "-ar", "16000",
            "-f", "s16le",
            "pipe:1",
        ],
        stdin=subprocess.PIPE,
        stdout=subprocess.PIPE,
    )

@app.websocket("/ws/transcribe")
async def transcribe_websocket(websocket: WebSocket):
    await websocket.accept()
    print("‚úÖ Client connected")

    ffmpeg = start_ffmpeg()
    pcm_buffer = bytearray()
    transcription_buffer = ""

    try:
        while True:
            chunk = await websocket.receive_bytes()
            ffmpeg.stdin.write(chunk)

            # –ß–∏—Ç–∞–µ–º –∏–∑ stdout ffmpeg
            while ffmpeg.stdout.readable():
                raw = ffmpeg.stdout.read(3200)  # ~100ms –∞—É–¥–∏–æ –ø—Ä–∏ 16kHz, 16bit mono
                if not raw:
                    break

                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –±–∞–π—Ç—ã –≤ float32 numpy –º–∞—Å—Å–∏–≤
                pcm = np.frombuffer(raw, np.int16).astype(np.float32) / 32768.0

                if len(pcm) == 0:
                    continue

                # –†–∞—Å–ø–æ–∑–Ω–∞—ë–º –±–µ–∑ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ (—á—Ç–æ–±—ã –Ω–µ –∂–¥–∞—Ç—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
                segments, _ = model.decode(pcm)
                text = "".join([s.text for s in segments]).strip()

                if text and text != transcription_buffer:
                    transcription_buffer = text
                    await websocket.send_text(text)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)
    finally:
        try:
            ffmpeg.kill()
        except:
            pass
        await websocket.close()
        print("üõë Client disconnected")
